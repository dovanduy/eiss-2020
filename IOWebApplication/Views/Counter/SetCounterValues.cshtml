@model CounterVM[]
@using IOWebApplication.Infrastructure.Models.ViewModels.Common
@using IOWebApplication.Infrastructure.Constants
@{
    ViewData["Title"] = "Задаване на начални стойности на броячи";
}
@section breadcrumb{
    @if (ViewBag.breadcrumbs != null)
    {
        <partial name="Breadcrumbs" model="@(List<IOWebApplication.Infrastructure.Models.ViewModels.Common.BreadcrumbsVM>)ViewBag.breadcrumbs" />
    }
}
<h3 class="text-danger">Важно: Задават се последните издадени номера по отделните броячи.</h3>
<h5 class="text-danger">Слеващата издадена стойност на брояч от ЕИСС ще е зададената стойност +1.</h5>
<div class="row">
    <div class="col-md-8">
        <form asp-action="SetCounterValues" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div id="saveContainer">
                <partial name="_SaveFormContent" model="@("#saveContainer")" />
                @*<partial name="_SetCounterValuesTabs" model="@Model" />*@
                <partial name="_SetCounterValuesList" model="@Model" />

                @*<ul class="nav nav-tabs">
                    <li class="active"><a href="#tabDoc" data-toggle="tab">Документи</a></li>
                    <li><a href="#tabCase" data-toggle="tab">Дела</a></li>
                    <li><a href="#tabAct" data-toggle="tab">Актове</a></li>
                    <li><a href="#tabOther" data-toggle="tab">Други</a></li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane active" id="tabDoc">
                        @for (int i = 0; i < Model.Count(); i++)
                        {
                            if (Model[i].CounterTypeId == NomenclatureConstants.CounterTypes.Document)
                            {
                                <div class="row set-counter-val">
                                    @Html.HiddenFor(x => Model[i].Id)
                                    <div class="col-lg-6  counter-label">
                                        @Model[i].Label
                                    </div>
                                    <div class="col-lg-2">
                                        @Html.TextBoxFor(x => Model[i].CurrentValue, null, new { @class = "form-control" })
                                    </div>
                                </div>
                            }
                        }
                    </div>
                    <div class="tab-pane" id="tabCase">
                        @for (int i = 0; i < Model.Count(); i++)
                        {
                            if (Model[i].CounterTypeId == NomenclatureConstants.CounterTypes.Case)
                            {
                                <div class="row set-counter-val">
                                    @Html.HiddenFor(x => Model[i].Id)
                                    <div class="col-lg-6 counter-label">
                                        @Model[i].Label
                                    </div>
                                    <div class="col-lg-2">
                                        @Html.TextBoxFor(x => Model[i].CurrentValue, null, new { @class = "form-control" })
                                    </div>
                                </div>
                            }
                        }
                    </div>
                    <div class="tab-pane" id="tabAct">
                        @for (int i = 0; i < Model.Count(); i++)
                        {
                            if (Model[i].CounterTypeId == NomenclatureConstants.CounterTypes.SessionAct)
                            {
                                <div class="row set-counter-val">
                                    @Html.HiddenFor(x => Model[i].Id)
                                    <div class="col-lg-6 counter-label">
                                        @Model[i].Label
                                    </div>
                                    <div class="col-lg-2">
                                        @Html.TextBoxFor(x => Model[i].CurrentValue, null, new { @class = "form-control" })
                                    </div>
                                </div>
                            }
                        }
                    </div>
                    <div class="tab-pane" id="tabOther">
                        @for (int i = 0; i < Model.Count(); i++)
                        {
                            if (!NomenclatureConstants.CounterTypes.OtherCounters.Contains(Model[i].CounterTypeId))
                            {
                                <div class="row set-counter-val">
                                    @Html.HiddenFor(x => Model[i].Id)
                                    <div class="col-lg-4 counter-label">
                                        @Model[i].CounterTypeName
                                    </div>
                                    <div class="col-lg-6 counter-label">
                                        @Model[i].Label
                                    </div>
                                    <div class="col-lg-2">
                                        @Html.TextBoxFor(x => Model[i].CurrentValue, null, new { @class = "form-control" })
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>*@
            </div>


            <div class="form-group">
                <input type="submit" value="Запис" class="btn btn-success" onclick="if (!confirm('Потвърди задаването на броячите!')){ return false;}" />
                <a asp-action="Index" class="btn btn-danger">Назад</a>
                <div class="pull-right">
                    @await Html.PartialAsync("_ShowLogOperation", new IOWebApplication.Core.Models.ShowLogModel() { ObjectKey = ((int)ViewBag.CourtId).ToString() })
                </div>
            </div>
        </form>
    </div>
</div>


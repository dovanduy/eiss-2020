@model ProceduralCoercionMeasure
@using IOWebApplication.Infrastructure.Models.Integrations.Eispp
@using IOWebApplication.Infrastructure.Extensions
@inject IEisppRulesService rulesService
@{
    var eisppRule = ViewData.ModelMetadata.GetEisppRuleElement(ViewData.TemplateInfo.HtmlFieldPrefix);
    (var ruleIds, var flags) = rulesService.GetEisppRuleIds((int)ViewBag.EventTypeId, eisppRule);
}
@if (flags > 0)
{
    <div class="eispp-checkbox-container">
        <fieldset class="is-fieldset">
            <legend class="legend_1">@Html.EditorFor(x => x.IsSelected, "EisppBoolean", null, new { IsSelectedReadOnly = Model.IsSelectedReadOnly })</legend>
            @Html.HiddenFor(x => x.MeasureId)
            @Html.HiddenFor(x => x.MeasureInstitutionTypeId)
            @Html.HiddenFor(x => x.MeasureInstitutionId)
            @Html.HiddenFor(x => x.MeasureStructure)
            @Html.HiddenFor(x => x.IsSelectedReadOnly)
            <div class="row">
                <div class="col-lg-2">@Html.EditorFor(x => x.InstitutionTypeName, "hd")</div>
                <div class="col-lg-4">@Html.EditorFor(x => x.InstitutionName, "hd")</div>
            </div>
            <div class="row">
                <div class="col-lg-2">@Html.EditorFor(x => x.MeasureType, "EisppDropDown", null, new { Ddl = ViewBag.MeasureTypeDDL })</div>
                <div class="col-lg-2">@Html.EditorFor(x => x.MeasureStatusDateVM, "EisppDateTime")</div>
                <div class="col-lg-2">@Html.EditorFor(x => x.BailAmount, "Double")</div>
                <div class="col-lg-2">@Html.EditorFor(x => x.MeasureStatus, "EisppDropDown", null, new { Ddl = ViewBag.MeasureStatusDDL })</div>
            </div>
        </fieldset>
    </div>
}


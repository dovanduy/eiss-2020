@model HtmlTemplateLink
@using IOWebApplication.Infrastructure.Data.Models.Common

@{
    if (Model.Id > 0)
    {
        ViewData["Title"] = "Редакция на връзки по вид съд/дело";
    }
    else
    {
        ViewData["Title"] = "Добавяне на връзки по вид съд/дело";
    }
    var filterJson = ViewBag.filterJson;
    var htmlTemplateTypeId = ViewBag.htmlTemplateTypeId;
}
@section breadcrumb{
    @if (ViewBag.breadcrumbs != null)
    {
        <partial name="Breadcrumbs" model="@(List<IOWebApplication.Infrastructure.Models.ViewModels.Common.BreadcrumbsVM>)ViewBag.breadcrumbs" />
    }
}
<div class="row">
    <div class="col-md-6">
        <form asp-action="EditLink" method="post">
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.HtmlTemplateId)
            @Html.HiddenFor(x => htmlTemplateTypeId)

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div id="saveContainer">
                <partial name="_SaveFormContent" model="@("#saveContainer")" />

                @Html.EditorFor(x => x.SourceType, "GenericDropDown")
                @Html.EditorFor(x => x.CourtTypeId, "GenericDropDown")
                @Html.EditorFor(x => x.CaseGroupId, "GenericDropDown")
                @Html.EditorFor(x => x.IsActive, "Boolean")
            </div>

            <div class="form-group">
                <input type="submit" value="Запис" class="btn btn-success" />
                @await Html.PartialAsync("_ButtonClose")
            </div>
        </form>
    </div>
</div>
<form name="formPostFilter" id="formPostFilter" action="@Url.Action("Index")" method="post">
    @Html.HiddenFor(x => filterJson)
</form>

<script>
   function postToFilterHtmlTemplate()
   {
       $("#formPostFilter").submit();
   }
   function postToFilterHtmlTemplateLink() {
       $('#formPostFilter').attr('action', '@Url.Action("IndexLink", new { Id = Model.HtmlTemplateId})');
       $("#formPostFilter").submit();
   }
</script>
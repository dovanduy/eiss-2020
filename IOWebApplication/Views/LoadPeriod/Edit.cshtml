@model CourtLoadResetPeriod
@using IOWebApplication.Infrastructure.Data.Models.Common

@section breadcrumb{
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index","Home")" title="Начало"><i class="fa fa-home"></i></a></li>
        <li><a href="@Url.Action("Index","LoadPeriod")"><i class="fa fa-building-o"></i> Периоди към съд</a></li>
    </ol>
}

@{
    if (Model.Id > 0)
    {
        ViewData["Title"] = "Редакция на период";
    }
    else
    {
        ViewData["Title"] = "Добавяне на период";
    }
}

<div class="row">
    <div class="col-md-12">
        <form asp-action="Edit" method="post">
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.CourtId)

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div id="saveContainer">
                <partial name="_SaveFormContent" model="@("#saveContainer")" />

                <div class="row">
                    <div class="col-lg-4">@Html.EditorFor(x => x.Description)</div>
                  
                </div>

                <div class="row">
                    <div class="col-lg-2">@Html.EditorFor(x => x.DateFrom)</div>
                    <div class="col-lg-2">@Html.EditorFor(x => x.DateTo)</div>
                </div>

            </div>

            <div class="form-group">
                <input type="submit" value="Запис" class="btn btn-success" />
                <a asp-action="Index" class="btn btn-danger">Назад</a>
                @if (Model.Id > 0)
                {
                    <div class="pull-right">
                        @await Html.PartialAsync("_ShowLogOperation", new IOWebApplication.Core.Models.ShowLogModel() { ObjectKey = Model.Id.ToString() })
                    </div>
                }
            </div>
        </form>
    </div>
</div>


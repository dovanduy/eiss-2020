@model ExpenseOrderEditVM
@using IOWebApplication.Infrastructure.Models.ViewModels.Money

@{
    var actionName = "EditExpenseOrder";
    var classColMd = "col-md-6";
    if (Model.ForPopUp == true)
    {
        actionName = "ExpenseOrder";
        classColMd = "col-md-10";
    }
    if (Model.Id > 0)
    {
        ViewData["Title"] = "Редакция";
    }
    else
    {
        ViewData["Title"] = "Добавяне";
    }
}
@section breadcrumb{
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index","Home")" title="Начало"><i class="fa fa-home"></i></a></li>
        <li><a href="@Url.Action("ExpenseOrderList","Money")">Списък разходни ордери</a></li>
    </ol>
}

<div class="row">
    <div class=@classColMd>
        <form asp-action=@actionName method="post" id="cmModalFormExpenseOrder">
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.ObligationIdStr)
            @Html.HiddenFor(x => x.ForPopUp)

            @Html.ValidationSummary()

            <div id="saveContainer">
                <partial name="_SaveFormContent" model="@("#saveContainer")" />
                @Html.EditorFor(x => x.Iban)
                @Html.EditorFor(x => x.BIC)
                @Html.EditorFor(x => x.BankName)
                @Html.EditorFor(x => x.RegionName)
                @Html.EditorFor(x => x.FirmName)
                @Html.EditorFor(x => x.FirmCity)
                @Html.EditorFor(x => x.PaidNote)
                @if (Model.ForPopUp == false)
                {
                    @Html.EditorFor(x => x.ExpenseOrderStateId, "GenericDropDown")
                }
            </div>

            <div class="form-group">
                <input type="submit" value="Запис" class="btn btn-success single-click-submit" />
                @if (Model.ForPopUp == false)
                {
                    <a asp-action="ExpenseOrderList" class="btn btn-danger">Назад</a>
                }
                @if (Model.Id > 0)
                {
                    <a href="@Url.Action("PreviewRawExpenseOrder","Money",new { id = Model.Id})" class="btn btn-dropbox" title="Печат"><i class="fa fa-print"></i> Печат<span class="hidden-sm hidden-xs"></span></a>
                }
                @if (Model.Id > 0)
                {
                    <div class="pull-right">
                        @await Html.PartialAsync("_ShowLogOperation", new IOWebApplication.Core.Models.ShowLogModel() { ObjectKey = Model.Id.ToString() })
                    </div>
                }
            </div>
        </form>
    </div>
</div>

<div id="modalMessageContainer">
</div>

<script>
    $(function () {
        if ('@Model.ForPopUp' == 'True') {
            attachAjaxForm('#cmModalFormExpenseOrder', function (data) {
                if (data.responseJSON.result == true) {
                    refreshTable('#obligationForPayMainTable');
                    HideModal();
                    messageHelper.ShowSuccessMessage('Записът премина успешно.');
                    window.location.href = '@Url.Action("PreviewRawExpenseOrder", "Money")/' + data.responseJSON.id;
                } else {
                    messageHelper.ShowErrorMessage(data.responseJSON.message, '#modalMessageContainer');
                }
            });
        }
    })

    $('#Iban').blur(function () {
        var iban = $(this).val();
        if (iban.length >= 8) {
            var searchBic = iban.substr(4, 4);
            if (searchBic.length > 0) {
                requestGET_Json('@Url.Action("GetBankDataFromIban","Money")', { search: searchBic}, function (data) {
                    $("#BIC").val(data.bic);
                    $("#BankName").val(data.bankName);
                });
            }
        }
    });

</script>
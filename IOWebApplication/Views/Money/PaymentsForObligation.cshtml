@model int

@{
    ViewData["Title"] = "Свързани плащания";
}

<div class="row">
    <div class="col-md-12">
        <table id="paymentsForObligationmainTable" class="table table-hover table-striped"></table>
    </div>
</div>

<script>
    $(function () {
        $('#paymentsForObligationmainTable').DataTable({
            ajax: {
                "url": "@Url.Action("ListDataPaymentsForObligation")",
                "type": "POST",
                "datatype": "json",
                data: function (d) {
                    d.obligationId = @Model;
                }
            },
            columns: [
                {
                    name: 'paymentNumber',
                    data: 'paymentNumber',
                    title: 'Номер',
                    sortable: true,
                    searchable: true
                },
                {
                    name: 'moneyGroupName',
                    data: 'moneyGroupName',
                    title: 'Вид сметка',
                    sortable: true,
                    searchable: true
                },
                {
                    className: "text-right",
                    name: 'amount',
                    data: 'amount',
                    title: 'Сума',
                    sortable: true,
                    searchable: false,
                    "render": function (value) {
                        if (value)
                            return parseFloat(value).toFixed(2);
                        else
                            return "0.00";
                    }
                },
                {
                    className: 'col-md-1',
                    name: 'paidDate',
                    data: 'paidDate',
                    title: 'Платено на',
                    sortable: true,
                    searchable: false,
                    "render": function (value) {
                        if (value)
                            return moment(value).format("DD.MM.YYYY");
                        else
                            return "";
                    }
                },
                {
                    name: 'senderName',
                    data: 'senderName',
                    title: 'Вносител',
                    sortable: true,
                    searchable: true
                },
                {
                    name: 'isAvans',
                    data: "isAvans",
                    title: 'Авансово плащане',
                    sortable: true,
                    searchable: false,
                    className: "text-center",
                    "render": function (value) {
                        return value ? 'Да' : 'Не';
                    }
                },
                {
                    name: 'isActive',
                    data: "isActive",
                    title: 'Активен',
                    sortable: true,
                    searchable: false,
                    className: "text-center",
                    "render": function (value) {
                        return value ? 'Да' : 'Не';
                    }
                },
                {
                    name: 'actions',
                    data: "id",
                    title: "",
                    sortable: false,
                    searchable: false,
                    className: "text-center noExport",
                    "render": function (value) {
                        return TemplateToHtml('#paymentsForObligationTemplate', value);
                    }
                }
            ]
        });
    });
</script>

<script id="paymentsForObligationTemplate" type="text/x-handlebars-template">
    @if (ViewBag.HasStorno)
    {
        <a href="#" class="btn btn-sm btn-danger" onclick="StornoObligationPayment('{{this}}');"><i class="fa fa-remove"></i></a>
    }
</script>

<script>
        function StornoObligationPayment(id) {
            swalConfirm('Потвърди деактивирането!', function () {
                postContent('@Url.Action("StornoObligationPayment","Money")'
                    , { id: id }
                    , function (data) {
                        if (data.result == true) {
                            refreshTable('#paymentsForObligationmainTable');
                            ReloadDatatable();
                            messageHelper.ShowSuccessMessage(data.message);
                        } else {
                            messageHelper.ShowErrorMessage(data.message);
                        }
                    });
            });
        }
</script>
